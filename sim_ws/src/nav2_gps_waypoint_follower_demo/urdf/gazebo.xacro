<?xml version="1.0"?>

<!-- <robot xmlns:xacro="http://www.ros.org/wiki/xacro"> -->
<robot>

  <!-- Gazebo references for moving parts -->

  <gazebo reference="chassis">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="base_scan">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="wheel_module_front_left">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="wheel_module_front_right">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="wheel_module_rear_left">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="wheel_module_rear_right">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="wheel_front_left">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="wheel_front_right">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="wheel_rear_left">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="wheel_rear_right">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- Gazebo references for lidar, imu, and GPS -->
  <gazebo reference="base_scan">
    <sensor type="ray" name="scan">
      <always_on>true</always_on>
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.48</min_angle>
            <max_angle>1.48</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.05</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="turtlebot3_laserscan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>base_scan</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="gps_link">
    <sensor type="gps" name="tb3_gps">
      <always_on>true</always_on>
      <update_rate>1</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <gps>
        <position_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.01</stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.01</stddev>
            </noise>
          </vertical>
        </position_sensing>
      </gps>
      <plugin name="my_gps_plugin" filename="libgazebo_ros_gps_sensor.so">
        <ros>
          <remapping>~/out:=/gps/fix</remapping>
        </ros>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="imu_link">
    <sensor type="imu" name="tb3_imu">
      <always_on>true</always_on>
      <update_rate>200</update_rate>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <plugin name="turtlebot3_imu" filename="libgazebo_ros_imu_sensor.so">
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
        <ros>
          <remapping>~/out:=imu</remapping>
        </ros>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Add the 4 wheel steering plugin to the robot model -->
  <gazebo>
      <plugin
              filename="ign_ros2_control-system"
              name="ign_ros2_control::IgnitionROS2ControlPlugin">
          <parameters>$(find nav2_gps_waypoint_follower_demo)/config/zinger.yaml</parameters>
      </plugin>
  </gazebo>
  <gazebo>
        <plugin
              filename="libignition-gazebo-pose-publisher-system.so"
              name="ignition::gazebo::systems::PosePublisher">
          <publish_link_pose>true</publish_link_pose>
          <publish_sensor_pose>true</publish_sensor_pose>
          <publish_collision_pose>false</publish_collision_pose>
          <publish_visual_pose>false</publish_visual_pose>
          <publish_model_pose>true</publish_model_pose>
          <publish_nested_model_pose>true</publish_nested_model_pose>
          <use_pose_vector_msg>true</use_pose_vector_msg>
          <static_publisher>true</static_publisher>
          <static_update_frequency>-1</static_update_frequency>
      </plugin>
  </gazebo>

</robot>

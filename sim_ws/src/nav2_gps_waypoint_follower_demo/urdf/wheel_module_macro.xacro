<?xml version="1.0" ?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <include filename="color_macro.xacro"/>
    <include filename="inertia_macro.xacro"/>

    <!--
        A macro to create a wheel module (including links and joints)
        NOTE: A joint is just a relationship between two links (two frames)
        Parameters:
        - parent_name: Name of parent link, e.g. left_rear
        - mass: Mass of the wheel in kilogram
        - radius: Radius of the wheel in meters
        - width: Width of the wheel in meters
        - module_len: Height of wheel module in meters
        - cx, cy, cz = The position of center of wheel module w.r.t parent frame
        - side: left or right
    -->
    <xacro:macro name="wheel_assembly" params="parent_name mass radius width module_len module_width_x module_width_y cx cy cz side">
        <!--
        Firstly create a link for the wheel module
        Then create a joint to connect the wheel module to the parent link
        Then create a link for wheel
        Then create a joint to connect the wheel to the wheel module
        -->
        <joint name="wheel_module_${parent_name}_joint" type="continuous">
            <parent link="${parent_name}"/>
            <child link="wheel_module_${parent_name}"/>
            <origin xyz="${cx} ${cy} ${cz}" rpy="0 0 0"/> <!--This origin is where child link is placed w.r.t parent link -->
        </joint>

        <!-- Define the wheel module link -->
        <link name="wheel_module_${parent_name}">
            <visual>
                <origin xyz="0 0 0"/> <!--This origin is w.r.t the wheel_module_${parent_name} link -->
                <geometry>
                    <box size="${module_width_x} ${module_width_y} ${module_len}"/>
                </geometry>
                <material name="grey"/>
            </visual>
            <collision>
                <origin xyz="0 0 0"/> <!--This origin is w.r.t the wheel_module_${parent_name} link -->
                <geometry>
                    <box size="${module_width_x} ${module_width_y} ${module_len}"/>
                </geometry>
            </collision>
            <!-- !Hardcoded mass -->
            <xacro:inertial_box mass="2.0" x="${module_width_x}" y="${module_width_y}" z="${module_len}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_box>
        </link>

        <!-- Define the wheel link -->
        <xacro:if value="${side == 'left'}">
            <xacro:property name="wheel_position_y" value="-${width}"/>
            <xacro:property name="wheel_yaw" value="-${PI/2}"/>
        </xacro:if>
        <xacro:if value="${side == 'right'}">
            <xacro:property name="wheel_position_y" value="${width}"/>
            <xacro:property name="wheel_yaw" value="${PI/2}"/>
        </xacro:if>

        <joint name="wheel_${parent_name}_joint" type="continuous">
            <parent link="wheel_module_${parent_name}"/>
            <child link="wheel_${parent_name}"/>
            <origin xyz="0 ${wheel_position_y} ${-module_len/2.0}" rpy="0 0 ${wheel_yaw}"/>
            <axis xyz="0 0 1"/>
        </joint>

        <link name="wheel_${parent_name}">
            <visual>
                <geometry>
                    <cylinder radius="${radius}" length="${width}"/>
                </geometry>
                <material name="dark"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="${radius}" length="${width}"/>
                </geometry>
            </collision>
            <xacro:inertial_cylinder mass="${mass}" length="${width}" radius="${radius}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_cylinder>
        </link>

    </xacro:macro>

</robot>
